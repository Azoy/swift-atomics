#[[
This source file is part of the Swift Atomics Open Source Project

Copyright (c) 2021 - 2023 Apple Inc. and the Swift project authors
Licensed under Apache License v2.0 with Runtime Library Exception

See https://swift.org/LICENSE.txt for license information
#]]

add_library(Atomics
  "Types/UnsafeAtomicLazyReference.swift"
  "Types/IntegerOperations.swift.gyb"
  "Types/DoubleWord.swift"
  "Types/ManagedAtomic.swift"
  "Types/ManagedAtomicLazyReference.swift"
  "Types/AtomicMemoryOrderings.swift"
  "Types/UnsafeAtomic.swift"
  "Types/autogenerated/IntegerOperations.swift"
  "Unmanaged extensions.swift"
  "Primitives/Primitives.shims.swift.gyb"
  "Primitives/Primitives.native.swift.gyb"
  "Primitives/autogenerated/Primitives.native.swift"
  "Primitives/autogenerated/Primitives.shims.swift"
  "Conformances/RawRepresentable.swift"
  "Conformances/AtomicBool.swift.gyb"
  "Conformances/PointerConformances.swift.gyb"
  "Conformances/OptionalRawRepresentable.swift"
  "Conformances/IntegerConformances.swift.gyb"
  "Conformances/autogenerated/IntegerConformances.swift"
  "Conformances/autogenerated/PointerConformances.swift"
  "Conformances/autogenerated/AtomicBool.swift"
  "Protocols/AtomicInteger.swift"
  "Protocols/AtomicValue.swift"
  "Protocols/AtomicReference.swift"
  "Protocols/AtomicOptionalWrappable.swift"
  "Protocols/AtomicStorage.swift")

set_target_properties(Atomics PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES ${CMAKE_Swift_MODULE_DIRECTORY})
if(CMAKE_SYSTEM_PROCESSOR MATCHES "x86_64|AMD64")
  target_compile_options(Atomics PUBLIC
    "$<$<COMPILE_LANGUAGE:Swift>:SHELL:-Xcc -mcx16>")
endif()
target_link_libraries(Atomics PUBLIC
  _AtomicsShims)

_install_target(Atomics)
set_property(GLOBAL APPEND PROPERTY SWIFT_ATOMICS_EXPORTS Atomics)
